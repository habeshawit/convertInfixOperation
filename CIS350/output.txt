
Program reading from statements1.dat

---------------------------------------------------------------------

Input Line: # (((A + B))))) #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # (A + B * C) / ((A - B) * C) #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # X * Y + A #
Valid Statement
Postfix Expresssion: XY*A+
Operations: 
	 XY*
	 XY*A+

Tree: 
	+ 
	* A 
	X Y 

Prefix: +*XYA
Infix: X*Y+A
Postfix: XY*A+
Evaluation: 
	 *XY = 600
	 +*XYA = 601
Final Result: 601

---------------------------------------------------------------------

Input Line: # ( A + B ) / C + (D - E ) * F * ( G - H )  #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # A + B / ( ( C + D ) * A - G )  #
Valid Statement
Postfix Expresssion: ABCD+A*G-/+
Operations: 
	 CD+
	 CD+A*
	 CD+A*G-
	 BCD+A*G-/
	 ABCD+A*G-/+

Tree: 
	+ 
	A / 
	B - 
	* G 
	+ A 
	C D 

Prefix: +A/B-*+CDAG
Infix: A+B/C+D*A-G
Postfix: ABCD+A*G-/+
Evaluation: 
	 +CD = 7
	 *+CDA = 7
	 -*+CDAG = 0
	 /B-*+CDAG = ERROR (Division by zero not allowed)

---------------------------------------------------------------------

Input Line: # A + b -) D / E ( F + 4)  #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # 4 + 5 #
Valid Statement
Postfix Expresssion: 45+
Operations: 
	 45+

Tree: 
	+ 
	4 5 

Prefix: +45
Infix: 4+5
Postfix: 45+
Evaluation: 
	 +45 = 9
Final Result: 9

---------------------------------------------------------------------

Input Line: # ( D - 3 ) * ;  #
Invalid Statement: 
se of parenthesis
---------------------------------------------------------------------

Input Line: # 4 & 5 #
Invalid Statement: 
or
---------------------------------------------------------------------

Input Line: # A#B #
Invalid Statement: 
error
---------------------------------------------------------------------

Input Line: # 5 / 0 #
Valid Statement
Postfix Expresssion: 50/
Operations: 
	 50/

Tree: 
	/ 
	5 0 

Prefix: /50
Infix: 5/0
Postfix: 50/
Evaluation: 
	 /50 = ERROR (Division by zero not allowed)

---------------------------------------------------------------------

Input Line: # ( A ) + ( B ) #
Valid Statement
Postfix Expresssion: AB+
Operations: 
	 AB+

Tree: 
	+ 
	A B 

Prefix: +AB
Infix: A+B
Postfix: AB+
Evaluation: 
	 +AB = 3
Final Result: 3

---------------------------------------------------------------------

Input Line: # A B - C #
Valid Statement
Postfix Expresssion: ABC-
Operations: 
	 BC-

Tree: 
	- 
	B C 

Prefix: -BC
Infix: B-C
Postfix: BC-
Evaluation: 
	 -BC = -1
Final Result: -1

---------------------------------------------------------------------

Input Line: # ( A + ) B #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # A + ( F - ) D #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # Cis200isfun-4 #
Invalid Statement: 

---------------------------------------------------------------------

Input Line: # ( D - r ) A * C #
Invalid Statement: 
Statement: 
	 Illegal parenthesis use

---------------------------------------------------------------------

Input Line: # A + C / ( F - E - 1 ) #
Valid Statement
Postfix Expresssion: ACFE1--/+
Operations: 
	 E1-
	 FE1--
	 CFE1--/
	 ACFE1--/+

Tree: 
	+ 
	A / 
	C - 
	F - 
	E 1 

Prefix: +A/C-F-E1
Infix: A+C/F-E-1
Postfix: ACFE1--/+
Evaluation: 
	 -E1 = 4
	 -F-E1 = 2
	 /C-F-E1 = 1.5
	 +A/C-F-E1 = 2.5
Final Result: 2.5

---------------------------------------------------------------------

Input Line: # ( ( A + B ) * C - D ) * ( E * ( F - G ) + H )  #
Valid Statement
Postfix Expresssion: AB+C*D-EFG-*H+*
Operations: 
	 AB+
	 AB+C*
	 AB+C*D-
	 FG-
	 EFG-*
	 EFG-*H+
	 AB+C*D-EFG-*H+*

Tree: 
	* 
	- + 
	* D * H 
	+ C E - 
	A B F G 

Prefix: *-*+ABCD+*E-FGH
Infix: A+B*C-D*E*F-G+H
Postfix: AB+C*D-EFG-*H+*
Evaluation: 
	 -FG = -1
	 *E-FG = -5
	 +*E-FGH = 3
	 +AB = 3
	 *+ABC = 9
	 -*+ABCD = 5
	 *-*+ABCD+*E-FGH = 15
Final Result: 15

---------------------------------------------------------------------

Input Line: # ( A - ( B * C ) / D ) + ( E * ( F * G ) ) #
Valid Statement
Postfix Expresssion: ABC*D/-EFG**+
Operations: 
	 BC*
	 BC*D/
	 ABC*D/-
	 FG*
	 EFG**
	 ABC*D/-EFG**+

Tree: 
	+ 
	- * 
	A / E * 
	* D F G 
	B C 

Prefix: +-A/*BCD*E*FG
Infix: A-B*C/D+E*F*G
Postfix: ABC*D/-EFG**+
Evaluation: 
	 *FG = 42
	 *E*FG = 210
	 *BC = 6
	 /*BCD = 1.5
	 -A/*BCD = -0.5
	 +-A/*BCD*E*FG = 209.5
Final Result: 209.5

---------------------------------------------------------------------

Input Line: # ( 1 - ( Y + N ) / 5 ) + 3 * Y #
Valid Statement
Postfix Expresssion: 1YN+5/-3Y*+
Operations: 
	 YN+
	 YN+5/
	 1YN+5/-
	 3Y*
	 1YN+5/-3Y*+

Tree: 
	+ 
	- * 
	1 / 3 Y 
	+ 5 
	Y N 

Prefix: +-1/+YN5*3Y
Infix: 1-Y+N/5+3*Y
Postfix: 1YN+5/-3Y*+
Evaluation: 
	 *3Y = 75
	 +YN = 39
	 /+YN5 = 7.8
	 -1/+YN5 = -6.8
	 +-1/+YN5*3Y = 68.2
Final Result: 68.2
